# kubectl -n ptx-edge create secret generic pdc-secrets.env --type=Opaque \
# --from-literal=PDC_SERVICE_KEY=dWJUUKH9rYF9wr_UAPb6PQXW9h17G7dzuGCbiDhcyjCGgHzLwBp6QHOQhDg0FFxS24GD8nvw37oe_LOjl7ztNATYiVOd_ZEVHQpV \
# --from-literal=PDC_SECRET_KEY=Qh4XvuhSJbOp8nMV1JtibAUqjp3w_efBeFUfCmqQW_Nl8x4t3Sk6fWiK5L05CB3jhKZOgY5JlBSvWkFBHH_6fFhYQZWXNoZxO78x \
# -o yaml --dry-run=client
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: pdc-secrets.env
  namespace: ptx-edge
data:
  BUILD_PDC_KEY_SERVICE: ZFdKVVVLSDlyWUY5d3JfVUFQYjZQUVhXOWgxN0c3ZHp1R0NiaURoY3lqQ0dnSHpMd0JwNlFIT1FoRGcwRkZ4UzI0R0Q4bnZ3MzdvZV9MT2psN3p0TkFUWWlWT2RfWkVWSFFwVg==
  BUILD_PDC_KEY_SECRET: UWg0WHZ1aFNKYk9wOG5NVjFKdGliQVVxanAzd19lZkJlRlVmQ21xUVdfTmw4eDR0M1NrNmZXaUs1TDA1Q0IzamhLWk9nWTVKbEJTdldrRkJISF82ZkZoWVFaV1hOb1p4Tzc4eA==
immutable: true
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: pdc-config.env
  namespace: ptx-edge
data:
  BUILD_PDC_HOST: "pdc.ptx-edge.svc.cluster.local"
  BUILD_PDC_PORT: "30003"
  BUILD_CONTRACT_HOST: "contract.ptx-sandbox.svc.cluster.local"
  BUILD_CONTRACT_PORT: "3001"
  BUILD_CATALOG_HOST: "catalog.ptx-sandbox.svc.cluster.local"
  BUILD_CATALOG_PORT: "3002"
immutable: true
---
apiVersion: v1
kind: Service
metadata:
  name: builder-webhook
  namespace: ptx-edge
spec:
  selector:
    app: builder
  type: ClusterIP
  ports:
    - name: webhook-port
      protocol: TCP
      port: 8888
      targetPort: webhook-port
--- ####################################################################################################################
# kubectl create serviceaccount builder
# kubectl config set-credentials builder --token=$(kubectl create token builder)
# kubectl config set-context builder-context --cluster=k3d-dev --user=builder
# kubectl config use-context builder-context
apiVersion: v1
kind: ServiceAccount
metadata:
  name: builder
  labels:
    app: builder
automountServiceAccountToken: false
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: secret-creator
  namespace: ptx-edge
rules:
  - apiGroups: [ "" ]
    resources: [ "secrets" ]
    verbs: [ "create" ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: secret-creator
  namespace: ptx-edge
subjects:
  - kind: ServiceAccount
    name: builder
    namespace: ptx-edge
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: secret-creator
---
apiVersion: v1
kind: Pod
metadata:
  name: builder
  namespace: ptx-edge
  labels:
    app: builder
spec:
  serviceAccountName: builder
  containers:
    - name: builder
      image: registry.k3d.local:5000/ptx-edge/builder:1.0
      imagePullPolicy: IfNotPresent
      #command: [ "python3", "-m", "app", "-v"]
      command: [ "/bin/sh", "-c", "sleep infinity" ]
      volumeMounts:
        - name: src
          mountPath: /usr/src/builder/app
        - name: worker-dir
          mountPath: /usr/src/worker
          readOnly: false
        - name: data-dir
          mountPath: /var/cache/data
          readOnly: false
        - name: kube-api-client-cfg
          mountPath: /var/run/secrets/projected
          readOnly: true
        - name: registry-ca
          mountPath: /usr/share/ca-certificates/ptx-edge/registry_CA.crt
          readOnly: true
      ports:
        - name: webhook-port
          containerPort: 8888
          protocol: TCP
      envFrom:
        - secretRef:
            name: pdc-secrets.env
        - configMapRef:
            name: pdc-config.env
      env:
        - name: BUILD_DATA_SRC
          value: "file:///etc/hostname"  # collect_data_from_file
          #value: "https://github.com/czeni/sample-datasets/raw/refs/heads/main/mnist_train_data.npz"  # collect_data_from_url
          #value: "http://host.k3d.internal:9000/datetime.txt" # collect_data_from_url + auth
          #value: "ptx://66db1a6dc29e3ba863a85e0f"
        - name: BUILD_DATA_AUTH
          value: "basic:demo:demo"
        #- name: BUILD_DATA_AUTH_SCHEME
        #  value: basic
        #- name: BUILD_DATA_AUTH_USERNAME
        #  value: demo
        #- name: BUILD_DATA_AUTH_PASSWORD
        #  value: demo
        - name: BUILD_DATA_DST
          value: "/var/cache/data/"
        - name: BUILD_CATALOG_OFFER_PROVIDER
          value: "66d187f4ee71f9f096bae8ca"
        - name: BUILD_CATALOG_OFFER_CONSUMER
          value: "66d18b79ee71f9f096baecb1"
        - name: BUILD_WORKER_SRC
          #value: "docker://busybox:latest"  # collect_worker_image_from_repo
          #value: "docker://host.k3d.internal:5555/busybox:latest" # collect_worker_image_from_repo + auth
          value: "secret://czentye:${DH_TOKEN}" # create_image_pull_secret - user:password[@server]
        - name: BUILD_WORKER_AUTH_CRED
          value: "mock:mock"
        - name: BUILD_WORKER_AUTH_INSECURE
          value: "True"
        #- name: BUILD_WORKER_AUTH_SERVER
        #  value: "https://index.docker.io/v1/"
        - name: BUILD_WORKER_DST
          value: "REGISTRY/myworker:latest"
  volumes:
    - name: src
      hostPath:
        path: /usr/local/share/builder/app
        type: Directory
    - name: registry-ca
      hostPath:
        path: /usr/share/ca-certificates/ptx-edge/registry_CA.crt
        type: File
    - name: data-dir
      emptyDir:
        sizeLimit: 100Mi
    - name: worker-dir
      emptyDir:
        sizeLimit: 100Mi
    - name: kube-api-client-cfg
      projected:
        defaultMode: 420
        sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
                - key: ca.crt
                  path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
                - fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
                  path: namespace
  restartPolicy: Never