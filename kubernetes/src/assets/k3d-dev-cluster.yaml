# nonk8s
kind: Simple
apiVersion: k3d.io/v1alpha5
metadata:
  name: dev
servers: 1
agents: 1
ports:
  - port: 8888:80
    nodeFilters:
      - loadbalancer
  - port: 3000:30003
    nodeFilters:
      - agent:0:direct
volumes:
  # Development purposes
  - volume: ${PROJECT_ROOT}/builder:/usr/local/share/builder
    nodeFilters:
      - all
  # Development purposes
  - volume: ${PROJECT_ROOT}/rest-api:/usr/local/share/rest-api
    nodeFilters:
      - all
  # Development purposes
  - volume: ${PROJECT_ROOT}/scheduler:/usr/local/share/scheduler
    nodeFilters:
      - all
  # Add registry CA cert
  - volume: ${PROJECT_ROOT}/registry/.certs/ca/ca.crt:/usr/share/ca-certificates/ptx-edge/registry_CA.crt:ro
    nodeFilters:
      - all
registries:
  create:
    name: ${REGISTRY}
    image: ptx-edge/registry:1.0
    hostPort: "${REGISTRY_PORT}"
    volumes:
      - ${PROJECT_ROOT}/.cache:/var/lib/registry   # Persist data locally
  config: |
    mirrors:
      ${REGISTRY}:${REGISTRY_PORT}:
        endpoint:
          - https://${REGISTRY}:${REGISTRY_PORT}
    configs:
      ${REGISTRY}:${REGISTRY_PORT}:
        auth:
          username: ${REGISTRY_USER}
          password: ${REGISTRY_SECRET}
        tls:
          ca_file: /usr/share/ca-certificates/ptx-edge/registry_CA.crt
options:
  kubeconfig:
    updateDefaultKubeconfig: true
    switchCurrentContext: true
  k3d:
    wait: true
    timeout: 30s
    #disableLoadbalancer: true
    disableImageVolume: false
    disableRollback: false
  k3s:
    nodeLabels:
      - label: privacy-zone.dataspace.ptx.org/zone-A=true
        nodeFilters:
          - agent:*
      - label: privacy-zone.dataspace.ptx.org/zone-B=true
        nodeFilters:
          - agent:*
      - label: connector.dataspace.ptx.org/enabled=true
        nodeFilters:
          - agent:*