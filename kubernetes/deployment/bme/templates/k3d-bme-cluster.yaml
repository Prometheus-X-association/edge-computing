# nonk8s
---
kind: Simple
apiVersion: k3d.io/v1alpha5
metadata:
  name: ${CLUSTER}
servers: 1
agents: 2
ports:
  # Export loadbalancer
  - port: ${GW_WEB_PORT}:80
    nodeFilters:
      - loadbalancer
  - port: ${GW_WEBSECURE_PORT}:443
    nodeFilters:
      - loadbalancer
  # Export PDC
  - port: ${PDC_DEF_PORT}:${PDC_NODEPORT}
    nodeFilters:
      - agent:0:direct
volumes:
  # Add registry CA cert
  - volume: ${CA_DIR}/ca.crt:${CA_CERT_PATH}:ro
    nodeFilters:
      - all
  # Add traefik startup config
  - volume: ${CFG_DIR}/manifests/k3d-bme-traefik-cfg.yaml:/var/lib/rancher/k3s/server/manifests/traefik-config.yaml:ro
    nodeFilters:
      - server:0
  # Store certificates generated by Letsencrypt/ACME
  # - volume: ${CFG_DIR}/storage:/var/lib/rancher/k3s/storage:rw
  #  nodeFilters:
  #    - all
registries:
  create:
    name: ${REGISTRY_HOST}
    image: ${REGISTRY_IMG}
    hostPort: "${REGISTRY_PORT}"
    volumes:
      # Persist loaded images locally
      - ${CFG_DIR}/.cache:/var/lib/registry
  config: |
    mirrors:
      ${REGISTRY}:
        endpoint:
          - https://${REGISTRY}
    configs:
      ${REGISTRY}:
        auth:
          username: ${REGISTRY_USER}
          password: ${REGISTRY_SECRET}
        tls:
          insecure_skip_verify: false
          ca_file: ${CA_CERT_PATH}
options:
  kubeconfig:
    updateDefaultKubeconfig: true
    switchCurrentContext: true
  k3d:
    wait: true
    timeout: ${TIMEOUT}
    disableLoadbalancer: false
    disableRollback: false
  k3s:
    nodeLabels:
      # Put each agent node into Privacy Zone 0
      - label: privacy-zone.dataspace.ptx.org/${DEF_ZONE}=true
        nodeFilters:
          - agent:*
      # Mark agent-0 as the zone leader
      - label: connector.dataspace.ptx.org/enabled=true
        nodeFilters:
          - agent:0
---