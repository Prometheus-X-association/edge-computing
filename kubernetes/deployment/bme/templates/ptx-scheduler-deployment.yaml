apiVersion: v1
kind: ServiceAccount
metadata:
  name: ${SCHEDULER}
  namespace: ${DEF_NS}
  labels:
    app: ${SCHEDULER}
automountServiceAccountToken: true
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: ${SCHEDULER}-rbac
  namespace: ${DEF_NS}
rules:
  - apiGroups: [ "", ]
    resources: [ "pods" ]
    verbs: [ "watch" ]
  - apiGroups: [ "", ]
    resources: [ "bindings" ]
    verbs: [ "create" ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ${SCHEDULER}-rbac
  namespace: ${DEF_NS}
subjects:
  - kind: ServiceAccount
    name: ${SCHEDULER}
    namespace: ${DEF_NS}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ${SCHEDULER}-rbac
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: node-lister
  namespace: ${DEF_NS}
rules:
  - apiGroups: [ "" ]
    resources: [ "nodes" ]
    verbs: [ "list" ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: node-lister
  namespace: ${DEF_NS}
subjects:
  - kind: ServiceAccount
    name: ${SCHEDULER}
    namespace: ${DEF_NS}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: node-lister
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${SCHEDULER}
  namespace: ${DEF_NS}
  labels:
    app: ${SCHEDULER}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ${SCHEDULER}
  template:
    metadata:
      labels:
        app: ${SCHEDULER}
    spec:
      serviceAccountName: ${SCHEDULER}
      containers:
        - name: ${SCHEDULER}
          image: ${REGISTRY}/ptx-edge/scheduler:1.0
          imagePullPolicy: IfNotPresent
          command: [ "python3", "-m", "app", "--verbose" ]
          env:
            - name: METHOD
              value: ${SCHEDULER_METHOD}
            - name: SCHEDULER
              value: ${SCHEDULER_REF}
