---
apiVersion: v1
kind: Secret
#type: kubernetes.io/basic-auth
type: Opaque
metadata:
  name: ${API}-auth-secret
  namespace: ${DEF_NS}
#stringData:
#  username: ${API_BASIC_USER}
#  password: ${API_BASIC_PASSWORD}
data:
  users: ${API_CREDS_BASE64_ENCODED}
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: ${API}-basic-auth
  namespace: ${DEF_NS}
spec:
  basicAuth:
    secret: ${API}-auth-secret
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name:  ${API}-secure-headers
  namespace: ${DEF_NS}
spec:
  headers:
    frameDeny: true
    customFrameOptionsValue: SAMEORIGIN
    sslRedirect: false
    browserXssFilter: true
    contentTypeNosniff: true
    forceSTSHeader: true
    stsIncludeSubdomains: true
    stsPreload: true
    stsSeconds: 31536000
#---
#apiVersion: traefik.io/v1alpha1
#kind: IngressRoute
#metadata:
#  name: ${API}-secure
#  namespace: ${DEF_NS}
#  labels:
#    app: ${API}
#spec:
#  entryPoints:
#    - websecure
#  routes:
#    - match: Host(`${GW_TLS_DOMAIN}`) && PathPrefix(`/${DEF_NS}/${API}/${API_VER}`)
#      kind: Rule
#      middlewares:
#        - name: ${API}-basic-auth
#          namespace: ${DEF_NS}
#        - name: ${API}-secure-headers
#          namespace: ${DEF_NS}
#      services:
#        - name: ${API}
#          port: ${API_PORT}
#  tls:
#    secretName: ${API}-tls
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ${API}-secure
  namespace: ${DEF_NS}
  labels:
    app: ${API}
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.middlewares: ${DEF_NS}-${API}-basic-auth@kubernetescrd,${DEF_NS}-${API}-secure-headers@kubernetescrd
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/router.tls.options: ${DEF_NS}-tls-opt@kubernetescrd
spec:
  ingressClassName: traefik
  rules:
    - host: ${GW_TLS_DOMAIN}
      http:
        paths:
          - path: /${DEF_NS}/${API}/${API_VER}
            pathType: Prefix
            backend:
              service:
                name: ${API}
                port:
                  number: ${API_PORT}
  tls:
    - secretName: ${GW}-tls
    - hosts:
        - ${GW_TLS_DOMAIN}
---