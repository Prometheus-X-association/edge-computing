apiVersion: apps/v1
kind: Deployment
metadata:
  name: pdc
  namespace: ptx-edge
  labels:
    app.kubernetes.io/name: pdc
    app.kubernetes.io/instance: pdc-zone-a
    app.kubernetes.io/version: "1.9.2"
    app.kubernetes.io/component: connector
    app.kubernetes.io/part-of: ptx-edge
    #app.kubernetes.io/managed-by: controller.ptx-edge.org
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pdc
      privacy-zone.dataspace.ptx.org/zone-A: "true"
  template:
    metadata:
      labels:
        app: pdc
        privacy-zone.dataspace.ptx.org/zone-A: "true"
        app.kubernetes.io/name: pdc
        app.kubernetes.io/instance: pdc-zone-a
        app.kubernetes.io/version: "1.9.2"
        app.kubernetes.io/component: connector
        app.kubernetes.io/part-of: ptx-edge
    spec:
      nodeSelector:
        connector.dataspace.ptx.org/enabled: "true"
        privacy-zone.dataspace.ptx.org/zone-A: "true"
      initContainers:
        - name: pdc-mongodb
          image: ptx/mongodb:8.0.5-slim
          imagePullPolicy: IfNotPresent
          ports:
            - name: mongo-port
              containerPort: 27017
              protocol: TCP
          resources:
            requests:
              cpu: 100m
              memory: 150Mi
          restartPolicy: Always # Native sidecar container
          livenessProbe:
            httpGet:
              port: mongo-port
            initialDelaySeconds: 3
            periodSeconds: 5
      containers:
        - name: ptx-connector
          image: ptx/connector:1.9.2-slim
          imagePullPolicy: IfNotPresent
          ports:
            - name: pdc-port
              protocol: TCP
              containerPort: 3000
          resources:
            requests:
              cpu: 500m
              memory: 250Mi
          volumeMounts:
            - name: pdc-env
              mountPath: "/usr/src/app/.env.production"
              subPath: .env.production
              readOnly: true
            - name: pdc-config
              mountPath: "/usr/src/app/dist/src/config.production.json.template"
              subPath: config.production.json.template
              readOnly: true
            - name: pdc-start
              mountPath: "/usr/src/app/docker/scripts/start.sh"
              subPath: start.sh
              readOnly: true
          command:
            - /bin/sh
            - ./docker/scripts/start.sh
          args:
            - ./dist/src/config.production.json
          envFrom:
            - configMapRef:
                name: pdc-nodeport-env
            - secretRef:
                name: pdc-secrets-env
          env:
            - name: PDC_DOMAIN
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
      hostAliases:
        - hostnames:
            - gw.ptx-core.sandbox.local
          ip: 172.18.0.1
      volumes:
        - name: pdc-env
          configMap:
            name: pdc-config-files
            items:
              - key: .env
                path: .env.production
        - name: pdc-config
          configMap:
            name: pdc-config-files
            items:
              - key: config-template.json
                path: config.production.json.template
        - name: pdc-start
          configMap:
            name: pdc-config-files
            items:
              - key: start.sh
                path: start.sh