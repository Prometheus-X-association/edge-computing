{
  "components": {
    "callbacks": {},
    "links": {},
    "schemas": {
      "ExecutionMetrics": {
        "description": "Collected execution metrics",
        "example": {
          "elapsedTime": 42,
          "ret": 0
        },
        "properties": {
          "elapsedTime": {
            "description": "Elapsed time of the function",
            "example": 42,
            "minimum": 0,
            "type": "integer"
          },
          "ret": {
            "description": "Return value of the function",
            "example": 0,
            "maximum": 255,
            "minimum": 0,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ExecutionRequestBody": {
        "description": "Function execution parameters",
        "properties": {
          "data": {
            "description": "Unique reference/ID of the data",
            "example": "Data42",
            "type": "string"
          },
          "data_contract": {
            "description": "Unique contract ID",
            "example": "Contract42",
            "type": "string"
          },
          "func_contract": {
            "description": "Unique contract ID",
            "example": "Contract42",
            "type": "string"
          },
          "function": {
            "description": "Unique reference/ID of the function to be applied to the private data",
            "example": "FunctionData42",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/components/schemas/Metadata"
          }
        },
        "required": [
          "data",
          "data_contract",
          "func_contract",
          "function"
        ],
        "type": "object"
      },
      "ExecutionResult": {
        "description": "The result of the function execution on data",
        "example": {
          "data": "Data42",
          "function": "FunctionData42",
          "metrics": {
            "elapsedTime": 42,
            "ret": 0
          },
          "uuid": "11111111-2222-3333-4444-555555555555"
        },
        "properties": {
          "data": {
            "description": "Unique reference/ID of the data",
            "example": "Data42",
            "type": "string"
          },
          "function": {
            "description": "Unique reference/ID of the function to be applied to the private data",
            "example": "FunctionData42",
            "type": "string"
          },
          "metrics": {
            "$ref": "#/components/schemas/ExecutionMetrics"
          },
          "uuid": {
            "description": "Unique operation identifier",
            "example": "11111111-2222-3333-4444-555555555555",
            "format": "uuid",
            "type": "string"
          }
        },
        "required": [
          "data",
          "function",
          "uuid"
        ],
        "type": "object"
      },
      "Metadata": {
        "additionalProperties": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "integer"
            }
          ]
        },
        "description": "Arbitrary key-value pairs",
        "example": {
          "CPU-demand": 42,
          "privacy-zone": "zone-A",
          "timeout": 42
        },
        "type": "object"
      },
      "PrivateExecutionRequestBody": {
        "description": "Function execution parameters",
        "properties": {
          "consent": {
            "description": "Unique consent ID",
            "example": "Consent42",
            "type": "string"
          },
          "data_contract": {
            "description": "Unique contract ID",
            "example": "Contract42",
            "type": "string"
          },
          "func_contract": {
            "description": "Unique contract ID",
            "example": "Contract42",
            "type": "string"
          },
          "function": {
            "description": "Unique reference/ID of the function to be applied to the private data",
            "example": "FunctionData42",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/components/schemas/Metadata"
          },
          "private_data": {
            "description": "Unique reference/ID of the data",
            "example": "Data42",
            "type": "string"
          },
          "token": {
            "description": "Unique token created by the DataProvider related to the user's consent",
            "example": "Token42",
            "type": "string"
          }
        },
        "required": [
          "consent",
          "data_contract",
          "func_contract",
          "function",
          "private_data",
          "token"
        ],
        "type": "object"
      },
      "PrivateExecutionResult": {
        "description": "The result of the function execution on data",
        "example": {
          "function": "FunctionData42",
          "metrics": {
            "elapsedTime": 42,
            "ret": 0
          },
          "private_data": "Data42",
          "uuid": "11111111-2222-3333-4444-555555555555"
        },
        "properties": {
          "function": {
            "description": "Unique reference/ID of the function to be applied to the private data",
            "example": "FunctionData42",
            "type": "string"
          },
          "metrics": {
            "$ref": "#/components/schemas/ExecutionMetrics"
          },
          "private_data": {
            "description": "Unique reference/ID of the data",
            "example": "Data42",
            "type": "string"
          },
          "uuid": {
            "description": "Unique operation identifier",
            "example": "11111111-2222-3333-4444-555555555555",
            "format": "uuid",
            "type": "string"
          }
        },
        "required": [
          "function",
          "private_data",
          "uuid"
        ],
        "type": "object"
      },
      "VersionResponse": {
        "example": {
          "api": "api",
          "framework": "framework"
        },
        "properties": {
          "api": {
            "title": "Api",
            "type": "string"
          },
          "framework": {
            "title": "Framework",
            "type": "string"
          }
        },
        "required": [
          "api",
          "framework"
        ],
        "title": "VersionResponse",
        "type": "object"
      }
    }
  },
  "externalDocs": {
    "url": "https://github.com/Prometheus-X-association/edge-computing"
  },
  "info": {
    "contact": {
      "email": "czentye.janos@vik.bme.hu"
    },
    "description": "The Edge Computing (Decentralized AI processing) BB-02 provides value-added services exploiting an underlying distributed edge computing infrastructure.",
    "title": "PTX Edge Computing REST-API",
    "version": "0.1.0"
  },
  "openapi": "3.0.0",
  "paths": {
    "/requestEdgeProc": {
      "post": {
        "description": "",
        "operationId": "request_edge_proc",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExecutionRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExecutionResult"
                }
              }
            },
            "description": "Function deployment accepted"
          },
          "400": {
            "description": "Malformed deployment request"
          },
          "403": {
            "description": "Request prohibited by contract/consent"
          },
          "404": {
            "description": "Execution request parameters not found"
          },
          "408": {
            "description": "Function deployment timeout"
          },
          "412": {
            "description": "Undeployable request due to privacy zone restriction"
          },
          "415": {
            "description": "Unsupported request format"
          },
          "500": {
            "description": "Unexpected error"
          },
          "503": {
            "description": "Insufficient compute resources or unavailable deployment service"
          }
        },
        "summary": "Execute function on data",
        "tags": [
          "customerAPI"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.customer_api_controller"
      }
    },
    "/requestPrivacyEdgeProc": {
      "post": {
        "description": "",
        "operationId": "request_privacy_edge_proc",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PrivateExecutionRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivateExecutionResult"
                }
              }
            },
            "description": "Function deployment accepted"
          },
          "400": {
            "description": "Malformed deployment request"
          },
          "401": {
            "description": "Unauthorized request due to invalid token"
          },
          "403": {
            "description": "Request prohibited by contract/consent"
          },
          "404": {
            "description": "Execution request parameters not found"
          },
          "408": {
            "description": "Function deployment timeout"
          },
          "412": {
            "description": "Undeployable request due to privacy zone restriction"
          },
          "415": {
            "description": "Unsupported request format"
          },
          "500": {
            "description": "Unexpected error"
          },
          "503": {
            "description": "Insufficient compute resources or unavailable deployment service"
          }
        },
        "summary": "Execute function on private data",
        "tags": [
          "customerAPI"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.customer_api_controller"
      }
    },
    "/versions": {
      "get": {
        "description": "Versions of the REST-API component",
        "operationId": "get_versions_versions_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VersionResponse"
                }
              }
            },
            "description": "Successful Response"
          }
        },
        "summary": "Get Version",
        "x-openapi-router-controller": "swagger_server.controllers.default_controller"
      }
    }
  },
  "servers": [
    {
      "url": "/ptx-edge/v1"
    }
  ],
  "tags": [
    {
      "description": "Customer-facing API (EdgeAPI)",
      "name": "customerAPI"
    },
    {
      "description": "Connector-facing API (PrivacyPreservingPDC)",
      "name": "connectorAPI"
    }
  ]
}
