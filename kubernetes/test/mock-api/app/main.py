# generated by fastapi-codegen:
#   filename:  openapi_design.json
#   timestamp: 2025-05-20T13:46:51+00:00

from __future__ import annotations

from typing import Optional, Union

from fastapi import FastAPI

from .models import (
    ExecutionRequestBody,
    ExecutionResult,
    PrivateExecutionRequestBody,
    PrivateExecutionResult,
    VersionResponse,
)

app = FastAPI(
    contact={'email': 'czentye.janos@vik.bme.hu'},
    description='The Edge Computing (Decentralized AI processing) BB-02 provides value-added services exploiting an underlying distributed edge computing infrastructure.',
    title='PTX Edge Computing REST-API',
    version='0.1.0',
    servers=[{'url': '/ptx-edge/v1'}],
)


@app.post(
    '/requestEdgeProc',
    response_model=None,
    responses={'202': {'model': ExecutionResult}},
    tags=['customerAPI'],
)
def request_edge_proc(body: ExecutionRequestBody) -> Optional[ExecutionResult]:
    """
    Execute function on data
    """
    pass


@app.post(
    '/requestPrivacyEdgeProc',
    response_model=None,
    responses={'202': {'model': PrivateExecutionResult}},
    tags=['customerAPI'],
)
def request_privacy_edge_proc(
    body: PrivateExecutionRequestBody,
) -> Optional[PrivateExecutionResult]:
    """
    Execute function on private data
    """
    pass


@app.get('/versions', response_model=VersionResponse)
def get_versions_versions_get() -> VersionResponse:
    """
    Get Version
    """
    pass
