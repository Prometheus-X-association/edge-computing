# coding: utf-8

from __future__ import absolute_import

from datetime import date, datetime  # noqa: F401
from typing import List, Dict  # noqa: F401

from swagger_server import util
from swagger_server.models.base_model_ import Model


class ExecutionMetrics(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, ret: int = None, elapsed_time: int = None):  # noqa: E501
        """ExecutionMetrics - a model defined in Swagger

        :param ret: The ret of this ExecutionMetrics.  # noqa: E501
        :type ret: int
        :param elapsed_time: The elapsed_time of this ExecutionMetrics.  # noqa: E501
        :type elapsed_time: int
        """
        self.swagger_types = {
            'ret': int,
            'elapsed_time': int
        }

        self.attribute_map = {
            'ret': 'ret',
            'elapsed_time': 'elapsedTime'
        }
        self._ret = ret
        self._elapsed_time = elapsed_time

    @classmethod
    def from_dict(cls, dikt) -> 'ExecutionMetrics':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ExecutionMetrics of this ExecutionMetrics.  # noqa: E501
        :rtype: ExecutionMetrics
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ret(self) -> int:
        """Gets the ret of this ExecutionMetrics.

        Return value of the function  # noqa: E501

        :return: The ret of this ExecutionMetrics.
        :rtype: int
        """
        return self._ret

    @ret.setter
    def ret(self, ret: int):
        """Sets the ret of this ExecutionMetrics.

        Return value of the function  # noqa: E501

        :param ret: The ret of this ExecutionMetrics.
        :type ret: int
        """

        self._ret = ret

    @property
    def elapsed_time(self) -> int:
        """Gets the elapsed_time of this ExecutionMetrics.

        Elapsed time of the function  # noqa: E501

        :return: The elapsed_time of this ExecutionMetrics.
        :rtype: int
        """
        return self._elapsed_time

    @elapsed_time.setter
    def elapsed_time(self, elapsed_time: int):
        """Sets the elapsed_time of this ExecutionMetrics.

        Elapsed time of the function  # noqa: E501

        :param elapsed_time: The elapsed_time of this ExecutionMetrics.
        :type elapsed_time: int
        """

        self._elapsed_time = elapsed_time
